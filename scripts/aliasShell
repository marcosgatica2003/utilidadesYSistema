YELLOW='\e[33m'
ORANGE='\e[38;5;208m'
RED='\e[31m'
GREEN='\e[32m'
BLUE='\e[34m'
RESET='\e[0m'

function info()    { echo -e "${BLUE}[*] $1${RESET}"; }
function ok()      { echo -e "${GREEN}[✓] $1${RESET}"; }
function warn()    { echo -e "${ORANGE}[!] $1${RESET}"; }
function error()   { echo -e "${RED}[✗] $1${RESET}"; }


alias actualizarSistema='$HOME/.config/utilidadesYSistema/scripts/actualizarSistema.sh'
alias cls="cd $HOME && clear"
alias clima="curl wttr.in/Córdoba_Argentina"
alias vimrc="vim ~/.vimrc"
alias descargarYT="python3 $HOME/gaticonTools/descargarYoutube/descargarYT.py"
alias templateLaTeX="cp -r $HOME/.vim/templates/templateLaTeX ."
alias cd..2='cd ../../'
alias cd..3='cd ../../../'
alias temps='sensors | grep °C | lolcat'

if command -v lsd &> /dev/null; then
    alias ll='lsd -l'
    alias la='lsd -a'
    alias ls='lsd --group-dirs first --icon always --color auto'
    
    cd() {
        builtin cd "$@" 
        lsd --group-dirs first --icon always --color auto
    }
else
    alias ll='ls -l --block-size=MB'
    alias la='ls -a'
    alias l='ls -cf'
    alias ls='ls --color=auto -h --group-directories-first'
    
    cd() {
        builtin cd "$@"
         ls --color=auto
    }
fi

alias copiar='xclip -selection clipboard'
alias gstatus='git status'
alias ga='git add'
alias gaa='git add .'
alias gcommit='git commit -m'
alias gcheckout='git checkout'
alias gpullo='git pull origin'
alias gpusho='git push origin'
alias webcam='mplayer tv:///dev/video0 &>/dev/null '

if command -v doas &>/dev/null; then
    PRIV='doas'
elif command -v sudo &>/dev/null; then
    PRIV='sudo'
else
    PRIV=''
    error "⚠️  Ni sudo ni doas están disponibles bobo."
fi

pacman() {
    ok "Usando '$PRIV'..."
    $PRIV pacman "$@"
}

apt() {
    ok "Usando '$PRIV'..." 
    $PRIV /usr/local/bin/apt-fast "$@"
}

apto() {
    ok "Usando '$PRIV'..."
    $PRIV /bin/apt "$@"
}

encenderSsh() {
    ok "Usando '$PRIV'..."
    $PRIV systemctl start sshd
    $PRIV systemctl enable sshd
    echo "Ssh encendido."
}

encenderBluetooth() {
    ok "Usando '$PRIV'..."
    rfkill unblock bluetooth
    $PRIV systemctl start bluetooth.service
}

