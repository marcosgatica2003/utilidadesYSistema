call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-commentary'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'dense-analysis/ale'
Plug 'reedes/vim-lexical'
Plug 'lervag/vimtex'
Plug 'preservim/tagbar', { 'on': 'TagbarToggle' }
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

call plug#end()
syntax enable
colorscheme gruvbox
filetype plugin indent on

set number
set background=dark
set spell spelllang=es
set completeopt=menu,menuone,noselect
set termguicolors
set history=500
set encoding=utf-8
set scrolloff=8
set list listchars=tab:»·,trail:·
set foldmethod=syntax
set foldlevel=0
set cursorline
set backspace=2
set autoread
set incsearch
set clipboard=unnamedplus
set lazyredraw
set updatetime=300
set mouse=a
set laststatus=4
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set laststatus=2
set noshowmode

let &t_ut=''
let g:airline_theme='gruvbox'
let g:airline_powerline_fonts = 1
let g:loaded_python_provider = 1
let g:loaded_python3_provider = 1

let g:ale_sign_error = '✗'
let g:ale_sign_warning = '⚠'
let g:ale_set_statusline = 1
let g:ale_set_highlights = 1
let g:ale_virtualtext_cursor = 1

let g:airline_section_z = '%3p%% %3l:%2c'
let g:airline_section_x = ''
let g:airline_section_y = ''
let g:airline#extensions#tagbar#enabled = 0
let g:airline#extensions#virtualenv#enabled = 0
let g:airline#extensions#whitespace#enabled = 0

let g:vimtex_view_method = 'zathura'
let g:vimtex_compiler_method = 'latexmk'
let g:vimtex_compiler_latexmk = {
      \ 'build_dir' : '',
      \ 'callback' : 1,
      \ 'continuous' : 1,
      \}
let g:vimtex_quickfix_mode = 0
let g:vimtex_main_file = 'main.tex'

function! FindAndCompileMainTex()
  silent write
  
  let current_dir = getcwd()
  
  let main_file = findfile("main.tex", ".;")
  
  if !empty(main_file)
    echo "Compilando main.tex..."
    execute "VimtexCompile " . main_file
  else
    echo "No se encontró main.tex. Compilando archivo actual..."
    VimtexCompile
  endif
endfunction

nnoremap <Leader>lm :call FindAndCompileMainTex()<CR>
nnoremap <Leader>q :cclose<CR>

autocmd BufNewFile *.c,*.h 0r ~/.vim/templates/template.c
autocmd BufNewFile *.cpp,*.hpp 0r ~/.vim/templates/template.cpp
autocmd BufNewFile *.ino 0r ~/.vim/templates/template.ino
autocmd BufNewFile *.tex 0r ~/.vim/templates/template.tex
autocmd BufNewFile *.h 0r ~/.vim/templates/template.h
autocmd FileType tex setlocal spell spelllang=es
autocmd Syntax tex,c,cpp,vim,xml,html,xhtml setlocal foldmethod=syntax
autocmd Syntax tex,c,cpp,vim,xml,html,xhtml,perl normal zR

inoremap ( ()<Left>
inoremap { {}<Left>
inoremap [ []<Left>
inoremap ' ''<Left>
inoremap " ""<Left>
" inoremap $ $$<Left>
inoremap <C-Left> <C-X><C-S>
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() : "\<C-g>u\<CR>"
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"
inoremap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <silent><expr> <S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"

highlight Type cterm=italic gui=italic
highlight Function cterm=italic gui=italic
highlight Constant cterm=bold gui=bold
highlight texCmdPart guifg=#C70039 gui=italic
highlight String guifg=#FFA07A gui=italic
highlight SpellBad cterm=undercurl ctermfg=red gui=undercurl guisp=Red
highlight CocErrorHighlight cterm=undercurl gui=undercurl guisp=Red

